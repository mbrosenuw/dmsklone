**** Job Debugging Information ****
This job will run on n3437

ENVIRONMENT VARIABLES
APPTAINER_CACHEDIR=/tmp/.apptainer-mbrosen
BASH=/bin/bash
BASHOPTS=cmdhist:complete_fullquote:extquote:force_fignore:hostcomplete:interactive_comments:progcomp:promptvars:sourcepath
BASHRCSOURCED=Y
BASH_ALIASES=()
BASH_ARGC=()
BASH_ARGV=()
BASH_CMDS=()
BASH_ENV=/opt/ohpc/admin/lmod/lmod/init/profile
BASH_LINENO=([0]="0")
BASH_REMATCH=([0]="/mmfs1/home/mbrosen/.local/bin:/mmfs1/home/mbrosen/bin:")
BASH_SOURCE=([0]="/var/spool/slurmd/job27830599/slurm_script")
BASH_VERSINFO=([0]="4" [1]="4" [2]="20" [3]="1" [4]="release" [5]="x86_64-redhat-linux-gnu")
BASH_VERSION='4.4.20(1)-release'
CONDA_DEFAULT_ENV=/gscratch/mccoy/mbrosen
CONDA_EXE=/mmfs1/home/mbrosen/miniconda3/bin/conda
CONDA_PREFIX=/gscratch/mccoy/mbrosen
CONDA_PREFIX_1=/mmfs1/home/mbrosen/miniconda3
CONDA_PROMPT_MODIFIER='(/gscratch/mccoy/mbrosen) '
CONDA_PYTHON_EXE=/mmfs1/home/mbrosen/miniconda3/bin/python
CONDA_SHLVL=2
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1233162/bus
DEBUGINFOD_URLS='https://debuginfod.centos.org/ '
DIRSTACK=()
ENVIRONMENT=BATCH
EUID=1233162
FPATH=/opt/ohpc/admin/lmod/lmod/init/ksh_funcs
GROUPS=()
HISTCONTROL=ignoredups
HISTSIZE=10000000
HOME=/mmfs1/home/mbrosen
HOSTNAME=n3437
HOSTTYPE=x86_64
HYDRA_BOOTSTRAP=slurm
HYDRA_LAUNCHER_EXTRA_ARGS=--external-launcher
IFS=$' \t\n'
I_MPI_HYDRA_BOOTSTRAP=slurm
I_MPI_HYDRA_BOOTSTRAP_EXEC_EXTRA_ARGS=--external-launcher
KRB5CCNAME=KCM:
LANG=en_US.UTF-8
LESSOPEN='||/usr/bin/lesspipe.sh %s'
LMOD_CACHED_LOADS=yes
LMOD_CMD=/opt/ohpc/admin/lmod/lmod/libexec/lmod
LMOD_DIR=/opt/ohpc/admin/lmod/lmod/libexec
LMOD_MODULEPATH_INIT=/opt/ohpc/admin/lmod/lmod/init/.modulespath
LMOD_PKG=/opt/ohpc/admin/lmod/lmod
LMOD_ROOT=/opt/ohpc/admin/lmod
LMOD_SETTARG_FULL_SUPPORT=no
LMOD_VERSION=8.7.53
LMOD_sys=Linux
LOGNAME=mbrosen
LS_COLORS='rs=0:di=38;5;33:ln=38;5;51:mh=00:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=01;05;37;41:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;40:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.zst=38;5;9:*.tzst=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.wim=38;5;9:*.swm=38;5;9:*.dwm=38;5;9:*.esd=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.mjpg=38;5;13:*.mjpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.m4a=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.oga=38;5;45:*.opus=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:'
MACHTYPE=x86_64-redhat-linux-gnu
MAIL=/var/spool/mail/mbrosen
MANPATH=/opt/ohpc/admin/lmod/lmod/share/man:
MODULEPATH=/sw/klone:/sw/contrib/modulefiles
MODULEPATH_ROOT=/opt/ohpc/admin/modulefiles
MODULESHOME=/opt/ohpc/admin/lmod/lmod
OLDPWD=/gscratch/mccoy/mbrosen/dms/dmsklone/Code
OMPI_MCA_plm_slurm_args=--external-launcher
OPTERR=1
OPTIND=1
OSTYPE=linux-gnu
PATH=/gscratch/mccoy/mbrosen/bin:/mmfs1/home/mbrosen/miniconda3/condabin:/mmfs1/home/mbrosen/.local/bin:/mmfs1/home/mbrosen/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin
PIPESTATUS=([0]="0")
PPID=11208
PRTE_MCA_plm_slurm_args=--external-launcher
PS1='(/gscratch/mccoy/mbrosen) '
PS4='+ '
PWD=/gscratch/mccoy/mbrosen/dms/dmsklone
PYTHONPATH=:/gscratch/mccoy/mbrosen/dms/dmsklone
SHELL=/bin/bash
SHELLOPTS=braceexpand:hashall:interactive-comments
SHLVL=2
SLURMD_NODENAME=n3437
SLURM_CLUSTER_NAME=klone
SLURM_CONF=/var/spool/slurmd/conf-cache/slurm.conf
SLURM_CPUS_ON_NODE=1
SLURM_CPUS_PER_TASK=1
SLURM_GTIDS=0
SLURM_JOBID=27830599
SLURM_JOB_ACCOUNT=chem
SLURM_JOB_CPUS_PER_NODE=1
SLURM_JOB_END_TIME=1753944094
SLURM_JOB_GID=226269
SLURM_JOB_ID=27830599
SLURM_JOB_NAME=spectrum
SLURM_JOB_NODELIST=n3437
SLURM_JOB_NUM_NODES=1
SLURM_JOB_PARTITION=cpu-g2
SLURM_JOB_QOS=chem-cpu-g2
SLURM_JOB_START_TIME=1753908094
SLURM_JOB_UID=1233162
SLURM_JOB_USER=mbrosen
SLURM_LOCALID=0
SLURM_MEM_PER_NODE=256000
SLURM_NNODES=1
SLURM_NODEID=0
SLURM_NODELIST=n3437
SLURM_NPROCS=1
SLURM_NTASKS=1
SLURM_NTASKS_PER_NODE=1
SLURM_OOM_KILL_STEP=0
SLURM_PRIO_PROCESS=0
SLURM_PROCID=0
SLURM_SCRIPT_CONTEXT=prolog_task
SLURM_SUBMIT_DIR=/mmfs1/gscratch/mccoy/mbrosen/dms/dmsklone
SLURM_SUBMIT_HOST=klone-login03
SLURM_TASKS_PER_NODE=1
SLURM_TASK_PID=12159
SLURM_TOPOLOGY_ADDR=klone-ib-core.klone-ib-leaf-6j09-1.n3437
SLURM_TOPOLOGY_ADDR_PATTERN=switch.switch.node
SLURM_TRES_PER_TASK=cpu=1
SRUN_CPUS_PER_TASK=1
SSH_CLIENT='10.19.3.114 61847 22'
SSH_CONNECTION='10.19.3.114 61847 198.48.92.23 22'
SSH_TTY=/dev/pts/251
TERM=xterm-256color
TMPDIR=/tmp
UID=1233162
USER=mbrosen
XDG_RUNTIME_DIR=/run/user/1233162
XDG_SESSION_ID=26281
_='ENVIRONMENT VARIABLES'
http_proxy=http://klone-dip1:3128
no_proxy=localhost,hyak.local,hyakm.washington.edu
which_declare='declare -f'
which_opt=-f
__conda_activate () 
{ 
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        PS1="$CONDA_PS1_BACKUP";
        \unset CONDA_PS1_BACKUP;
    fi;
    \local ask_conda;
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return;
    \eval "$ask_conda";
    __conda_hashr
}
__conda_exe () 
{ 
    ( if [ -n "${_CE_M:+x}" ] && [ -n "${_CE_CONDA:+x}" ]; then
        "$CONDA_EXE" $_CE_M $_CE_CONDA "$@";
    else
        "$CONDA_EXE" "$@";
    fi )
}
__conda_hashr () 
{ 
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash;
    else
        if [ -n "${POSH_VERSION:+x}" ]; then
            :;
        else
            \hash -r;
        fi;
    fi
}
__conda_reactivate () 
{ 
    echo "'__conda_reactivate' is deprecated and will be removed in 25.9. Use '__conda_activate reactivate' instead." 1>&2;
    __conda_activate reactivate
}
clearLmod () 
{ 
    module --force purge;
    eval $($LMOD_DIR/clearLMOD_cmd --shell bash --full "$@")
}
clearMT () 
{ 
    eval $($LMOD_DIR/clearLMOD_cmd --shell bash --simple)
}
conda () 
{ 
    \local cmd="${1-__missing__}";
    case "$cmd" in 
        activate | deactivate)
            __conda_activate "$@"
        ;;
        install | update | upgrade | remove | uninstall)
            __conda_exe "$@" || \return;
            __conda_activate reactivate
        ;;
        *)
            __conda_exe "$@"
        ;;
    esac
}
gawklibpath_append () 
{ 
    [ -z "$AWKLIBPATH" ] && AWKLIBPATH=`gawk 'BEGIN {print ENVIRON["AWKLIBPATH"]}'`;
    export AWKLIBPATH="$AWKLIBPATH:$*"
}
gawklibpath_default () 
{ 
    unset AWKLIBPATH;
    export AWKLIBPATH=`gawk 'BEGIN {print ENVIRON["AWKLIBPATH"]}'`
}
gawklibpath_prepend () 
{ 
    [ -z "$AWKLIBPATH" ] && AWKLIBPATH=`gawk 'BEGIN {print ENVIRON["AWKLIBPATH"]}'`;
    export AWKLIBPATH="$*:$AWKLIBPATH"
}
gawkpath_append () 
{ 
    [ -z "$AWKPATH" ] && AWKPATH=`gawk 'BEGIN {print ENVIRON["AWKPATH"]}'`;
    export AWKPATH="$AWKPATH:$*"
}
gawkpath_default () 
{ 
    unset AWKPATH;
    export AWKPATH=`gawk 'BEGIN {print ENVIRON["AWKPATH"]}'`
}
gawkpath_prepend () 
{ 
    [ -z "$AWKPATH" ] && AWKPATH=`gawk 'BEGIN {print ENVIRON["AWKPATH"]}'`;
    export AWKPATH="$*:$AWKPATH"
}
ml () 
{ 
    eval "$($LMOD_DIR/ml_cmd "$@")"
}
module () 
{ 
    if [ -z "${LMOD_SH_DBG_ON+x}" ]; then
        case "$-" in 
            *v*x*)
                __lmod_sh_dbg='vx'
            ;;
            *v*)
                __lmod_sh_dbg='v'
            ;;
            *x*)
                __lmod_sh_dbg='x'
            ;;
        esac;
    fi;
    if [ -n "${__lmod_sh_dbg:-}" ]; then
        set +$__lmod_sh_dbg;
        echo "Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod's output" 1>&2;
    fi;
    eval "$($LMOD_CMD shell "$@")" && eval "$(${LMOD_SETTARG_CMD:-:} -s sh)";
    __lmod_my_status=$?;
    if [ -n "${__lmod_sh_dbg:-}" ]; then
        echo "Shell debugging restarted" 1>&2;
        set -$__lmod_sh_dbg;
    fi;
    unset __lmod_sh_dbg;
    return $__lmod_my_status
}
which () 
{ 
    ( alias;
    eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
}
xSetTitleLmod () 
{ 
    builtin echo -n -e "\033]2;$1\007"
}
**********************************************
/gscratch/mccoy/mbrosen/lib/python3.13/site-packages/scipy/sparse/_index.py:201: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive. lil and dok are more efficient.
  self._set_arrayXarray_sparse(i, j, x)
